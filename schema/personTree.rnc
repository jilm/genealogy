namespace xi = "http://www.w3.org/2001/XInclude"

#
#  This schema validates the person tree.
#  Such a xml is generated by the XSLT.
#

grammar {

  start = List

  List = element list { Person * }

  # A person definition
  Person = element person { personContent }

  # A person must have a unique identifier (unique across the persons),
  # an attribute which says if it is a male or a female, a name definition.
  # This is the minimal person content. Moreover there may be information
  # about birth, death and wedding. And of course, each person may have
  # exactly one mather and one father. I know that the wedding is poorly
  # defined. Moreover, the wedding shoud be specified only for a woman.
  # It is just a room for future improvements.
  personContent = (
      attribute id { text }
      , attribute sex { "male" | "female" }
      , Name
      , Birth ?
      , Death ?
      , Father ?
      , Mather ?
  )

  parentContent = (
      Name
      , Birth ?
      , Death ?
      , Father ?
      , Mather ?
  )

  # The name of the person.
  Name = element name { nameContent }

  # The first and the second part of the person name. The second name should
  # be the birth name.
  nameContent = (    
    ( element first { text } , element second { text } )
    | element first { text }
    | element second { text }
  )

  # Information about the person birth.
  Birth = element birth { eventContent }

  # Wedding information, only for woman
  Wedding = element wedding { eventContent }

  # The death information
  Death = element death { eventContent }

  eventContent = (
    attribute verified { 'true' | 'false' }, (
      ( Date , Place )
      | Date
      | Place
    )
  )

  # Reference is just a href attribute which contains a value of id attribute
  # of the referenced object.
  Reference = ( attribute href { text } )

  Date = element date { dateContent }

  Place = element place { placeContent }

  dateContent = ( text )

  placeContent = ( text )

  # a reference to father
  Father = element father { parentContent }
  
  # A reference to mather
  Mather = element mather { parentContent }

  ID = ( attribute id { text } )

  Include = element xi:include {
    attribute parse { text },
    attribute href { text }
  }

}
